trigger:
  branches:
    include:
      - main

stages:
  - stage: BuildAndPush
    displayName: 'Build and Push Docker Image to AWS ECR'
    jobs:
      - job: Build
        displayName: 'Build and Push Job'
        pool:
          vmImage: 'ubuntu-latest'

        variables:
          IMAGE_TAG: $(Build.BuildId)  # Using Build ID as the Docker image tag

        steps:
          - checkout: self

          - script: |
              echo "Setting up AWS CLI..."
              export AWS_ACCESS_KEY_ID=$(AWS_ACCESS_KEY_ID)
              export AWS_SECRET_ACCESS_KEY=$(AWS_SECRET_ACCESS_KEY)
              export AWS_REGION=$(AWS_REGION)
              aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
              aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
              aws configure set default.region $AWS_REGION
              aws sts get-caller-identity  # Verify credentials
            displayName: 'AWS CLI Setup and Verification'

          - script: |
              echo "Logging in to Amazon ECR..."
              aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
            displayName: 'Login to AWS ECR'

          - script: |
              echo "Building the Docker image..."
              docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
            displayName: 'Build Docker Image'

          - script: |
              echo "Tagging the Docker image..."
              docker tag $ECR_REPOSITORY:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
            displayName: 'Tag Docker Image'

          - script: |
              echo "Pushing the Docker image to AWS ECR..."
              docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
            displayName: 'Push Docker Image to ECR'

          - script: |
              echo "Docker image successfully pushed to AWS ECR!"
            displayName: 'Success Message'
