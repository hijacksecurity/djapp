trigger:
  branches:
    include:
      - main

variables:
  - group: AWS_ECR_Credentials  # Link the variable group

stages:
  - stage: BuildAndPush
    displayName: 'Build and Push Docker Image to AWS ECR'
    jobs:
      - job: Build
        displayName: 'Build and Push Job'
        pool:
          vmImage: 'ubuntu-latest'

        steps:
          - checkout: self

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                echo "Checking AWS environment variables..."
                echo "AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)"
                echo "AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)"
                echo "AWS_REGION: $(AWS_REGION)"

                if [ -z "$(AWS_ACCESS_KEY_ID)" ] || [ -z "$(AWS_SECRET_ACCESS_KEY)" ] || [ -z "$(AWS_REGION)" ]; then
                  echo "One or more AWS environment variables are not set. Exiting..."
                  exit 1
                fi

                echo "Setting up AWS CLI..."
                aws configure set aws_access_key_id $(AWS_ACCESS_KEY_ID)
                aws configure set aws_secret_access_key $(AWS_SECRET_ACCESS_KEY)
                aws configure set default.region $(AWS_REGION)
                aws sts get-caller-identity  # Verify credentials
            displayName: 'AWS CLI Setup and Verification'

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                echo "Logging in to Amazon ECR..."
                aws ecr get-login-password --region $(AWS_REGION) | docker login --username AWS --password-stdin $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com
            displayName: 'Login to AWS ECR'

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                echo "Building the Docker image..."
                docker build -t $(ECR_REPOSITORY):$(Build.BuildId) .
            displayName: 'Build Docker Image'

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                echo "Tagging the Docker image..."
                docker tag $(ECR_REPOSITORY):$(Build.BuildId) $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/$(ECR_REPOSITORY):$(Build.BuildId)
            displayName: 'Tag Docker Image'

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                echo "Pushing the Docker image to AWS ECR..."
                docker push $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/$(ECR_REPOSITORY):$(Build.BuildId)
            displayName: 'Push Docker Image to ECR'

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                echo "Docker image successfully pushed to AWS ECR!"
            displayName: 'Success Message'
